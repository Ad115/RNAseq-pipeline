#! /cm/shared/apps/python37/3.7.0/bin/python3


#Run through this shell
#$ -S /cm/shared/apps/python37/3.7.0/bin/python3


# Use current working directory
#$ -cwd

# Join stdout and stderr
#$ -j y

# If modules are needed, source modules environment (Do not delete the next line):
#. /etc/profile.d/modules.sh

# Name the job
#$ -N quality_check

# Pass environment
#$ -V

# Work with 8G RAM
#$ -l vf=8G

# Use as many jobs as needed
#$ -t 1-18


'''
Quality check using FastQC
--------------------------

The current script was autogenerated with the 
file `script.quality_check.py`, look there for documentation.

'''

import os
import maya
import subprocess
from pathlib import Path


# The commands to be executed
commands = dict()
commands[1]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm2L_TTAGGC_L003_R1.fastq'
commands[2]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm1L_ATCACG_L003_R2.fastq'
commands[3]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm3L_ACAGTG_L003_R2.fastq'
commands[4]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm3R_GCCAAT_L003_R1.fastq'
commands[5]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm2R_TGACCA_L003_R2.fastq'
commands[6]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm2R_TGACCA_L003_R1.fastq'
commands[7]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm3L_ACAGTG_L003_R1.fastq'
commands[8]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm1L_ATCACG_L003_R1.fastq'
commands[9]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm3R_GCCAAT_L003_R2.fastq'
commands[10]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm2L_TTAGGC_L003_R2.fastq'
commands[11]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm1R_CGATGT_L003_R1.fastq'
commands[12]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm1R_CGATGT_L003_R2.fastq'
commands[13]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm2L.fastq'
commands[14]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm3L.fastq'
commands[15]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm1L.fastq'
commands[16]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm1R.fastq'
commands[17]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm2R.fastq'
commands[18]='fastqc -o /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/quality /mnt/Cromosoma/mhernandez/agarcia/avarela/analysis/raw_data/joined.mm3R.fastq'

# Fetch the job id
task_id = int( os.environ['SGE_TASK_ID'] )

# Fetch the command corresponding to the current job
command = commands[task_id]


# Execute the command
print(f'Task {task_id}. Executing command @', maya.now(), ':', command)

subprocess.run(command.split()) # <-- Here it is executed, splitting is 
                                #     necessary to pass the arguments 
                                #     appropriately

print(f'Task {task_id}. Finished execution @', maya.now())
